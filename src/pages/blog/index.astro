---
import { getCollection } from "astro:content";
import BaseLayout from "../../layouts/BaseLayout.astro";

const posts = await getCollection("blog");
---

<BaseLayout title="Blog" description="Kumpulan tulisan saya">
  <main>
    <h1>Blogs</h1>
    <section class="terminal-box">
      <div class="typing" id="terminal-text"></div>
    </section>
    <section class="dir-list">
      <div class="window-chrome" role="group" aria-label="Window controls">
        <div class="traffic-lights">
          <button class="light close" aria-label="Close"></button>
          <button class="light minimize" aria-label="Minimize"></button>
          <button class="light maximize" aria-label="Zoom"></button>
        </div>
        <div class="window-title">Index of /blog</div>
      </div>

      <table>
        <thead>
          <tr>
            <th>No</th>
            <th>Name</th>
            <th>Size</th>
            <th>Last Modified</th>
          </tr>
        </thead>
        <tbody>
          {
            posts.map((post, i) => (
              <tr>
                <td>{i + 1}</td>
                <td>
                  <a href={`/blog/${post.slug}/`}>
                    {post.data.image && (
                      <img
                        src={post.data.image}
                        alt=""
                        width="24"
                        height="24"
                        style="vertical-align:middle;margin-right:6px;"
                      />
                    )}
                    {post.data.title}
                  </a>
                </td>
                <td>â€”</td>
                <td>
                  {new Date(post.data.pubDate).toLocaleDateString("id-ID", {
                    year: "numeric",
                    month: "short",
                    day: "2-digit",
                  })}
                </td>
              </tr>
            ))
          }
        </tbody>
      </table>
    </section>
  </main>
</BaseLayout>

<style>
  .terminal-box {
    background: #0d1117;
    color: #00ff88;
    font-family: monospace;
    padding: 1.5rem;
    border-radius: 8px;
    max-width: 600px;
    margin: 2rem auto;
    box-shadow: 0 0 15px rgba(0, 0, 0, 0.4);
  }

  @keyframes blink {
    50% {
      border-color: transparent;
    }
  }
</style>

<script>
  const quotes = [
    "$ apt install hidup-bahagia\nReading package lists... Done\nBuilding dependency tree... Done\nE: You must be root to perform this operation",
    "$ apt install jodoh\nReading package lists... Done\nBuilding dependency tree... Done\nE: Package 'jodoh' has no installation candidate",
    "$ apt install semangat\nReading package lists... Done\nBuilding dependency tree... Done\n0 upgraded, 0 newly installed, 0 to remove and 100 not upgraded.",
    "$ apt install liburan-panjang\nReading package lists... Done\nBuilding dependency tree... Done\nE: Unable to locate package liburan-panjang",
  ];

  const el = document.getElementById("terminal-text");
  let quoteIndex = 0;

  function typeWriter(text, i = 0, speed = 30, callback) {
    if (i < text.length) {
      el.textContent += text.charAt(i);
      setTimeout(() => typeWriter(text, i + 1, speed, callback), speed);
    } else {
      if (callback) setTimeout(callback, 2000); // tunggu 2 detik setelah selesai
    }
  }

  function eraseText(callback) {
    let text = el.textContent;
    if (text.length > 0) {
      el.textContent = text.substring(0, text.length - 1);
      setTimeout(() => eraseText(callback), 15);
    } else {
      if (callback) callback();
    }
  }

  function showQuotes() {
    el.textContent = "";
    const text = quotes[quoteIndex];
    typeWriter(text, 0, 100, () => {
      eraseText(() => {
        quoteIndex = (quoteIndex + 1) % quotes.length;
        showQuotes();
      });
    });
  }

  showQuotes();
</script>
<style>
  body {
    margin: 0;
  }

  h1,
  p {
    text-align: center;
  }
  section.dir-list {
    max-width: 900px;
    margin: 5rem auto !important;
    font-family: monospace;
    font-size: 0.95rem;
    background: #ffffff; /* putih ala macOS */
    color: #1d1d1f;
    padding: 1.5rem;
    border-radius: 12px;
    border: 1px solid #d2d2d7;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.06);
  }

  h2 {
    margin-bottom: 1rem;
    color: #1d1d1f;
    font-weight: 600;
  }

  table {
    width: 100%;
    border-collapse: collapse;
  }

  th,
  td {
    text-align: left;
    padding: 8px 10px;
  }

  th {
    border-bottom: 1px solid #e5e5e7;
    color: #6e6e73;
    font-weight: 500;
  }

  td {
    border-bottom: 1px solid #f0f0f2;
  }

  a {
    color: #007aff; /* biru macOS */
    text-decoration: none;
  }

  a:hover {
    color: #34c759; /* hijau macOS */
    text-decoration: underline;
  }

  tr:hover {
    background: #f5f5f7;
  }

  section.dir-list {
    max-width: 900px;
    margin: 2rem auto;
    font-family: ui-monospace, SFMono-Regular, Menlo, monospace;
    font-size: 0.95rem;
    background: #ffffff;
    color: #1d1d1f;
    padding: 0; /* <-- padding dipindah ke body di bawah */
    border-radius: 12px;
    border: 1px solid #d2d2d7;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.06);
    overflow: hidden; /* biar rounded rapi dengan header */
  }

  /* Window chrome ala macOS */
  .window-chrome {
    height: 42px;
    display: flex;
    align-items: center;
    justify-content: center; /* judul di tengah */
    background: #f5f5f7;
    border-bottom: 1px solid #e5e5ea;
    position: relative;
    padding: 0 12px;
  }

  .traffic-lights {
    position: absolute;
    left: 12px;
    display: flex;
    gap: 8px;
  }

  .light {
    width: 12px;
    height: 12px;
    border-radius: 50%;
    border: 1px solid transparent;
    background-clip: padding-box;
    appearance: none;
    outline: none;
    cursor: default; /* dekoratif */
    box-shadow: inset 0 0 0 1px rgba(0, 0, 0, 0.05);
  }

  .light.close {
    background: #ff5f57;
    border-color: #e0443e;
  }
  .light.minimize {
    background: #febc2e;
    border-color: #d19920;
  }
  .light.maximize {
    background: #28c840;
    border-color: #1f9a31;
  }

  .light:hover {
    filter: brightness(0.95);
  }

  .window-title {
    font-size: 0.95rem;
    font-weight: 600;
    color: #1d1d1f;
  }

  /* Body tabel */
  .dir-list table {
    width: 100%;
    border-collapse: collapse;
    margin-top: 6px;
  }

  .dir-list th,
  .dir-list td {
    text-align: left;
    padding: 10px 14px;
  }

  .dir-list th {
    border-top: 1px solid #e5e5ea;
    border-bottom: 1px solid #e5e5ea;
    color: #6e6e73;
    font-weight: 500;
    background: #fbfbfd;
  }

  .dir-list td {
    border-bottom: 1px solid #f0f0f2;
  }

  .dir-list a {
    color: #007aff;
    text-decoration: none;
  }

  .dir-list a:hover {
    color: #34c759;
    text-decoration: underline;
  }

  .dir-list tr:hover {
    background: #f5f5f7;
  }
</style>
